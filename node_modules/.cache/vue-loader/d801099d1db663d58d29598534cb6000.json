{"remainingRequest":"/home/georges/projects/tatutituta/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/georges/projects/tatutituta/app/src/App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&","dependencies":[{"path":"/home/georges/projects/tatutituta/app/src/App.vue","mtime":1594043683106},{"path":"/home/georges/projects/tatutituta/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/georges/projects/tatutituta/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/georges/projects/tatutituta/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/georges/projects/tatutituta/app/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/georges/projects/tatutituta/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/georges/projects/tatutituta/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wcmUtZm9ybWF0dGVkIHsKICB3aGl0ZS1zcGFjZTogcHJlOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n\n    <v-app-bar app color=\"primary\" dark>\n      <v-toolbar-title>Ta-Tu-Ti-Tu-TÁ</v-toolbar-title>\n    </v-app-bar>\n\n    <v-main>\n      <v-container class=\"fill-height\" fluid>\n\n        <v-row align=\"center\">\n          <v-col class=\"text-center\">\n            <Counter source=\"hello!\"/>\n            <Score\n              v-if=\"mounted\"\n              @osmdInit=\"osmdInit\"\n              @scoreLoaded=\"scoreLoaded\"\n              :score=\"selectedScore\"\n              :ready=\"pbEngineReady\"\n            />\n            <!--<InstrumentControl\n              v-for=\"instrument in scoreInstruments\"\n              :key=\"instrument.Id\"\n              :playbackEngine=\"pbEngine\"\n              :instrument=\"instrument\"\n            />-->\n            <PlaybackControls :playbackEngine=\"pbEngine\" :scoreTitle=\"scoreTitle\" />\n          </v-col>\n        </v-row>\n\n        <v-row align=\"center\">\n          <v-col>\n            \n            <v-card>\n\n              <v-tabs v-model=\"selectedPanelIndex\" background-color=\"blue-grey darken-1\" dark show-arrows>\n                <v-tab v-for=\"panel in panels\" :key=\"panel.panel\">\n                  {{ panel.panel }}\n                </v-tab>\n              </v-tabs>\n\n              <v-tabs-items v-model=\"selectedPanelIndex\"> \n                <v-tab-item v-for=\"panel in panels\" :key=\"panel.panel\">\n\n                  <v-card flat>\n\n                    <v-card>\n\n                      <v-tabs v-model=\"selectedExerciseIndex\" vertical color=\"blue-grey darken-1\">\n                        <v-tab v-for=\"exercise in selectedPanel.exercise_list\" :key=\"exercise.short\">\n                          {{ exercise.title }}\n                        </v-tab>\n                        <v-tabs-items v-model=\"selectedExerciseIndex\"> \n                          <v-tab-item v-for=\"exercise in selectedPanel.exercise_list\" :key=\"exercise.short\">\n                            \n                            <v-card flat>\n\n                              <v-card-text>\n                                {{ exercise.desc }}\n                              </v-card-text>\n                              \n                            </v-card>\n\n                          </v-tab-item>\n                        </v-tabs-items>\n                        \n                      </v-tabs>\n\n                    </v-card>\n\n                  </v-card>\n\n                </v-tab-item>\n              </v-tabs-items>\n\n            </v-card>\n\n          </v-col>\n        </v-row>\n\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\n\n  import Counter from './components/Counter.vue'\n  import PlaybackControls from \"./components/PlaybackControls.vue\";\n  //import InstrumentControl from \"./components/InstrumentControl.vue\";\n  import Score from \"./components/Score\";\n  import { mapMutations, mapGetters } from 'vuex'\n  import PlaybackEngine from 'osmd-audio-player';\n\n  import scores from \"./scores\";\n\n  export default {\n    props: {\n      source: String,\n    },\n    computed: {\n      ...mapGetters([\n        'panels',\n        'selectedPanel',\n        'selectedExercise'\n      ],\n    ),\n      scoreInstruments() {\n        return this.pbEngine.scoreInstruments;\n      },\n      selectedPanelIndex: {\n        get () {\n          return this.$store.state.selectedPanelIndex\n        },\n        set (value) {\n          this.$store.commit('selectPanel', value)\n        }\n      },\n      selectedExerciseIndex: {\n        get () {\n          return this.$store.state.selectedExerciseIndex\n        },\n        set (value) {\n          this.$store.commit('selectExercise', value)\n        }\n      },\n      // selectedPanelIndex () {\n      //   return this.$store.state.panelIndex\n      // }\n    },\n    components: {\n      Counter,\n      Score,\n      PlaybackControls,\n      //InstrumentControl\n    },\n    methods: {\n      ...mapMutations([\n        'selectPanel',\n        'selectExercise'\n      ]),\n      increment() {\n        this.$store.commit('increment')\n        console.log(this.$store.state.count)\n      },\n      osmdInit(osmd) {\n        console.log(\"OSMD init\");\n        this.osmd = osmd;\n        //this.selectedScore = \"https://opensheetmusicdisplay.github.io/demo/sheets/MuzioClementi_SonatinaOpus36No3_Part1.xml\";\n        this.selectedScore = 'assets/partituras/base1.musicxml';\n        this.selectedScore = 'assets/partituras/ritm_samba.musicxml';\n        this.selectedScore = 'assets/partituras/ritm_opainjé.musicxml';\n      },\n      async scoreLoaded() {\n        console.log(\"Score loaded\");\n        if (this.osmd.sheet.title) this.scoreTitle = this.osmd.sheet.title.text;\n        await this.pbEngine.loadScore(this.osmd);\n        console.log(\"pbEngine ready\");\n        this.pbEngineReady = true;\n\n        let voice = this.pbEngine.scoreInstruments[0].Voices[0]\n        this.pbEngine.setInstrument(voice, 117) //\"Melodic Tom\"\n      },\n      scoreChanged(scoreUrl) {\n        if (this.pbEngine.state === \"PLAYING\") this.pbEngine.stop();\n        this.selectedScore = scoreUrl;\n        this.pbEngineReady = false;\n      }\n    },\n    data: () => ({\n      tab: null,\n      subtab: null,\n      items: [\n        { tab: 'One', content: 'Tab 1 Content' },\n        { tab: 'Two', content: 'Tab 2 Content' },\n        { tab: 'Three', content: 'Tab 3 Content' },\n        { tab: 'Four', content: 'Tab 4 Content' },\n        { tab: 'Five', content: 'Tab 5 Content' },\n        { tab: 'Six', content: 'Tab 6 Content' },\n        { tab: 'Seven', content: 'Tab 7 Content' },\n        { tab: 'Eight', content: 'Tab 8 Content' },\n        { tab: 'Nine', content: 'Tab 9 Content' },\n        { tab: 'Ten', content: 'Tab 10 Content' },\n      ],\n      pbEngine: new PlaybackEngine(),\n      pbEngineReady: false,\n      scores: scores,\n      selectedScore: null,\n      osmd: null,\n      scoreTitle: \"\",\n      drawer: true,\n      mounted: false\n    }),\n    mounted() {\n      setTimeout(() => {\n        // This extra delay before rendering the score component seems to help occasional issues where the \n        // OSMD cursor img element gets detached from the DOM and doesn't show unless \n        // you refresh the page. A less pretty workaround until root cause is determined\n        this.mounted = true;\n      }, 200)\n  }\n  }\n</script> \n\n<style scoped>\n.pre-formatted {\n  white-space: pre;\n}\n</style>"]}]}